#N canvas 477 77 1076 644 12;
#X obj 198 374 bng 15 250 50 0 empty empty empty 17 7 0 10 -204786
-1 -1;
#X obj 95 373 bng 15 250 50 0 empty empty empty 17 7 0 10 -220652 -1
-1;
#X obj 250 374 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-speed empty 0 -8
0 10 -204800 -1 -1 100 256;
#X obj 302 407 nbx 5 14 -1e+37 1e+37 0 0 empty \$0-transpo empty 0
-8 0 10 -236782 -1 -1 0 256;
#X obj 146 373 bng 15 250 50 0 empty empty empty 17 7 0 10 -259869
-1 -1;
#X text 135 351 stop;
#X text 190 349 play;
#N canvas 262 26 1379 1026 Sampler_Pitch/Time_Controls 0;
#X obj 466 563 cnv 15 116 160 empty empty empty 20 12 0 14 -232608
-66577 0;
#X obj 55 422 cnv 15 480 140 empty empty Sample-Counter 3 10 0 14 -188027
-66577 0;
#X obj 535 422 cnv 15 250 140 empty empty empty 20 12 0 14 -236782
-66577 0;
#X obj 185 353 cnv 15 140 70 empty empty hop-size 20 12 0 14 -240494
-66577 0;
#X obj 525 619 +;
#X floatatom 543 517 8 0 0 0 - - -;
#X obj 602 960 outlet;
#X obj 543 493 * 2048;
#X obj 148 98 bng 15 250 50 0 empty \$0-play empty 17 7 0 10 -262144
-1 -1;
#X obj 148 67 inlet;
#X obj 195 66 inlet;
#X obj 543 59 inlet;
#X obj 105 67 inlet;
#X obj 105 98 bng 15 250 50 0 empty \$0-stop empty 17 7 0 10 -262144
-1 -1;
#X text 105 42 stop;
#X text 151 41 play;
#X text 470 565 To [line~];
#X obj 195 381 * 512;
#X obj 177 460 +;
#X obj 500 651 pack;
#X obj 68 482 f;
#X obj 66 448 cnv 15 42 27 empty empty empty 20 12 0 14 -240494 -66577
0;
#X obj 68 452 bang~;
#X text 598 491 FFT Window;
#X obj 543 434 expr pow(2 \, ($f1/1200));
#X obj 242 381 block~ 512;
#X text 608 466 ratio;
#X floatatom 543 467 8 0 0 0 - - -;
#X text 604 518 New Transposition Window;
#X obj 583 563 cnv 15 140 80 empty empty empty 20 12 0 14 -253343 -66577
0;
#X obj 602 568 / 4;
#X msg 602 603 new-hop \$1;
#X text 631 567 New Hop Size;
#X obj 194 810 s \$0-transpo;
#X msg 241 740 \; pd dsp 1 \;;
#X msg 172 757 0;
#X obj 126 678 loadbang;
#X obj 160 839 s \$0-stop;
#X obj 126 708 trigger b b b b;
#X obj 206 782 s \$0-speed;
#X msg 206 758 100;
#X obj 794 104 cnv 15 450 240 empty empty Speed: 11 16 0 14 -188027
-66577 0;
#X obj 795 352 cnv 15 450 210 empty empty Transpotition: 12 13 0 14
-236782 -66577 0;
#X text 815 378 A transposition is given in cents \, we convert this
to ratio (recall the first introductory folder of this tutorial for
the convertion formulas). The interval ratio is multiplied by our FFT
window (which is here fixed at 2048 points).;
#X text 812 275 If speed is at 50% \, the counter spits the sample
read point at half steps. Thus \, takes twice as long. Conversely \,
200% is twice as fast \, and so on...;
#X text 816 450 So this new window represents our pitch change. A window
that is twice as big \, has a ratio of [2/1] \, or is an octave higher
- with twice the frequency.;
#X text 817 514 This is because we're reading through a sample section
that is twice as big at the same speed.;
#X text 712 441 to ratio;
#X text 713 427 converts;
#X obj 750 572 cnv 15 470 300 empty empty Output: 20 12 0 14 -232608
-66577 0;
#X msg 105 323 0;
#X obj 493 590 t f f;
#X text 787 664 This is the starting point to read the sample. Note
we're summing it up to the New Window size \, which will be the destination
point of [line~].;
#X text 547 33 pitch;
#X text 791 775 The New Hop Size also goes to the next subpatch. You'll
see there how it is used to get another block of audio that is an overlap
behind.;
#X msg 126 868 symbol ../samples/bubul.wav;
#X obj 68 507 spigot;
#X msg 138 322 1;
#X obj 107 363 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 199 40 speed;
#X obj 195 271 nbx 5 30 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 20
-204800 -1 -1 100 256;
#X obj 543 269 nbx 5 30 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 20
-236782 -1 -1 0 256;
#X obj 195 436 / 100;
#X obj 174 484 cnv 15 360 39 empty empty empty 20 12 0 14 -203904 -66577
0;
#X text 180 508 *;
#X obj 55 574 cnv 15 280 38 empty empty empty 20 12 0 14 -203904 -66577
0;
#X text 123 657 initialize;
#X text 241 435 (step is percentage of hop size);
#X text -42 436 bang every \; 512 samples -->;
#X text 810 142 The steps at which we read the sample is given by a
counter (see "Sample-Counter"). The steps are in percentages of the
Hop Size (which is fixed at 512 samples). Since the [block~] object
sets the block size to 512 \, the [bang~] objects sends a bang at every
512 samples. Then \, if speed is at 100% \, the counter is moving in
steps of 512 samples in agreement to the [bang~] object. Thus \, there's
no tempo modification.;
#X text 787 611 The Sample read point (given by the Sample-Counter)
is sent to a [line~] object on the next subpatch \, where it's used
to read the sample with [tabread4~].;
#X msg 500 678 \$1 \, \$2 11;
#X obj 177 490 expr if ($f1 < 0 \, $f1 + end_\$0 \, fmod($f1 \, end_\$0))
;
#X text 58 575 *Loops if bigger than sample-length or \; smaller than
0 (when reverse/negative);
#X text 63 541 sample read point ->;
#X obj 126 900 s \$0-sample-file;
#X obj -121 166 cnv 15 180 200 empty empty sampler 110 12 0 14 -233017
-66577 0;
#X obj -107 283 soundfiler;
#X obj -107 170 openpanel;
#X obj -107 226 list append \$0-sample;
#X msg -107 254 read -resize \$1 \$2;
#X obj -107 109 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj -107 65 inlet;
#X obj -91 341 table \$0-sample;
#X text -114 42 open sample;
#X obj -107 311 v end_\$0;
#X obj -94 197 r \$0-sample-file;
#X text 786 720 The speed of line is set to 11 miliseconds \, around
the hop size in ms \, but it could be less \, it just cant be too "slow".
;
#X text -41 311 sample-length;
#X connect 4 0 19 1;
#X connect 5 0 4 1;
#X connect 5 0 30 0;
#X connect 7 0 5 0;
#X connect 8 0 57 0;
#X connect 9 0 8 0;
#X connect 10 0 60 0;
#X connect 11 0 61 0;
#X connect 12 0 13 0;
#X connect 13 0 50 0;
#X connect 17 0 62 0;
#X connect 18 0 72 0;
#X connect 19 0 71 0;
#X connect 20 0 56 0;
#X connect 22 0 20 0;
#X connect 24 0 27 0;
#X connect 27 0 7 0;
#X connect 30 0 31 0;
#X connect 31 0 6 0;
#X connect 35 0 33 0;
#X connect 36 0 38 0;
#X connect 38 0 55 0;
#X connect 38 1 37 0;
#X connect 38 2 35 0;
#X connect 38 2 40 0;
#X connect 38 3 34 0;
#X connect 40 0 39 0;
#X connect 50 0 58 0;
#X connect 51 0 19 0;
#X connect 51 1 4 0;
#X connect 55 0 75 0;
#X connect 56 0 18 0;
#X connect 56 0 51 0;
#X connect 57 0 58 0;
#X connect 58 0 56 1;
#X connect 60 0 17 0;
#X connect 61 0 24 0;
#X connect 62 0 18 1;
#X connect 71 0 6 0;
#X connect 72 0 20 1;
#X connect 77 0 85 0;
#X connect 78 0 79 0;
#X connect 79 0 80 0;
#X connect 80 0 77 0;
#X connect 81 0 78 0;
#X connect 82 0 81 0;
#X connect 86 0 79 0;
#X restore 95 441 pd Sampler_Pitch/Time_Controls;
#X text 305 369 speed (%);
#X text 361 402 transposition (cents);
#X obj 15 42 cnv 15 450 180 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 491 132 1153 760 Phase-Vocoder 1;
#X obj -66 59 cnv 15 1150 630 empty empty Phase_Vocoder 410 50 0 50
-233083 -66577 0;
#X obj -49 132 cnv 15 260 70 empty empty empty 20 12 0 14 -228856 -66577
0;
#X obj 35 708 outlet~;
#X text 11 145 T = Back;
#X text 96 147 T' = Front;
#X obj -37 77 cnv 15 200 40 empty empty empty 20 12 0 14 -228856 -66577
0;
#X text 73 86 (THIS INPUT);
#X obj -29 30 inlet;
#N canvas 791 146 1037 403 Read-Sample 0;
#X obj 29 287 tabread4~ \$0-sample;
#X obj 318 246 tabread4~ \$0-sample;
#X obj 29 326 outlet~;
#X obj 319 325 outlet~;
#X obj 21 71 inlet;
#X obj 29 222 -~;
#X obj 21 150 sig~;
#X obj 21 113 route new-hop;
#X text 59 222 (Minus new Hop Size);
#X obj 109 166 expr~ fmod($v1 \, end_\$0);
#X obj 29 251 expr~ if ($v1 < 0 \, $v1 + end_\$0 \, $v1);
#X text 91 325 back;
#X text 374 323 front;
#X obj 109 140 line~;
#X text 514 91 The previous subpatch sends information we use to feed
a [line~] object. It then generates a ramp from a sapmple point given
by the "Sample Counter" until plus a "New Window size" (given by the
transposition parameter).;
#X text 513 161 We are using this information to read blocks of audio
with [tabread4~]. The [expr~] objetcs work as loopers just as in the
counter section.;
#X text 513 215 We need two consecutive windows that need to be apart
by the "New Hop Size". We'll now call the window that is a "New Hop
Size" behind as the "Back" or "Last" window. Whereas the other is labeled
as "Front" or "Current" window.;
#X connect 0 0 2 0;
#X connect 1 0 3 0;
#X connect 4 0 7 0;
#X connect 5 0 10 0;
#X connect 6 0 5 1;
#X connect 7 0 6 0;
#X connect 7 1 13 0;
#X connect 9 0 5 0;
#X connect 9 0 1 0;
#X connect 10 0 0 0;
#X connect 13 0 9 0;
#X restore -29 86 pd Read-Sample;
#N canvas 1136 388 488 416 fft-tables 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 2048 float 1;
#A 0 0 9.41753e-06 1.88351e-05 2.82228e-05 3.76403e-05 6.58631e-05
9.41157e-05 0.000122368 0.000150591 0.000197649 0.000244677 0.000291735
0.000338793 0.000404656 0.000470519 0.000536412 0.000602275 0.000686944
0.000771582 0.000856251 0.000940919 0.00104439 0.00114784 0.00125128
0.00135475 0.001477 0.00159922 0.00172144 0.00184369 0.00198466 0.00212565
0.00226665 0.00240761 0.00256735 0.00272706 0.00288677 0.00304651 0.00322494
0.00340337 0.00358179 0.00376022 0.00395733 0.00415444 0.00435156 0.00454867
0.00476444 0.00498021 0.00519595 0.00541171 0.00564611 0.00588048 0.00611487
0.00634927 0.00660223 0.00685519 0.00710818 0.00736114 0.00763267 0.00790417
0.0081757 0.00844723 0.00873727 0.0090273 0.00931731 0.00960734 0.00991583
0.0102243 0.0105328 0.0108413 0.0111682 0.0114951 0.011822 0.0121489
0.0124942 0.0128394 0.0131847 0.01353 0.0138936 0.0142572 0.0146208
0.0149843 0.0153662 0.015748 0.0161299 0.0165117 0.0169118 0.0173118
0.0177119 0.0181119 0.0185301 0.0189483 0.0193665 0.0197847 0.020221
0.0206572 0.0210935 0.0215298 0.0219841 0.0224383 0.0228927 0.0233469
0.0238191 0.0242914 0.0247636 0.0252359 0.025726 0.0262161 0.0267062
0.0271963 0.0277042 0.0282121 0.02872 0.0292279 0.0297535 0.0302792
0.0308048 0.0313304 0.0318737 0.032417 0.0329603 0.0335035 0.0340644
0.0346252 0.0351861 0.0357469 0.0363252 0.0369035 0.0374818 0.0380602
0.0386559 0.0392516 0.0398473 0.040443 0.041056 0.041669 0.042282 0.042895
0.0435252 0.0441555 0.0447857 0.0454159 0.0460632 0.0467106 0.0473579
0.0480052 0.0486696 0.0493339 0.0499983 0.0506626 0.0513439 0.0520252
0.0527064 0.0533877 0.0540858 0.0547839 0.0554819 0.05618 0.0568948
0.0576096 0.0583244 0.0590392 0.0597706 0.060502 0.0612334 0.0619648
0.0627127 0.0634606 0.0642084 0.0649563 0.0657206 0.0664849 0.0672491
0.0680134 0.0687939 0.0695744 0.070355 0.0711355 0.0719322 0.0727288
0.0735255 0.0743222 0.0751349 0.0759476 0.0767603 0.077573 0.0784016
0.0792302 0.0800588 0.0808874 0.0817318 0.0825762 0.0834206 0.084265
0.085125 0.085985 0.0868451 0.0877051 0.0885807 0.0894562 0.0903318
0.0912073 0.0920983 0.0929892 0.0938802 0.0947711 0.0956773 0.0965835
0.0974897 0.0983959 0.0993173 0.100239 0.10116 0.102081 0.103018 0.103954
0.10489 0.105826 0.106778 0.107729 0.10868 0.109631 0.110597 0.111563
0.112529 0.113494 0.114475 0.115455 0.116436 0.117416 0.118411 0.119406
0.1204 0.121395 0.122404 0.123413 0.124422 0.125431 0.126455 0.127478
0.128501 0.129524 0.130561 0.131598 0.132635 0.133672 0.134723 0.135774
0.136825 0.137876 0.138941 0.140005 0.14107 0.142134 0.143212 0.14429
0.145368 0.146446 0.147537 0.148629 0.14972 0.150811 0.151916 0.15302
0.154125 0.155229 0.156347 0.157464 0.158582 0.159699 0.160829 0.161959
0.16309 0.16422 0.165363 0.166506 0.167649 0.168792 0.169947 0.171102
0.172258 0.173413 0.174581 0.175748 0.176916 0.178084 0.179263 0.180443
0.181623 0.182803 0.183994 0.185186 0.186378 0.18757 0.188773 0.189977
0.19118 0.192384 0.193599 0.194814 0.196029 0.197244 0.19847 0.199697
0.200923 0.20215 0.203387 0.204625 0.205863 0.2071 0.208349 0.209598
0.210847 0.212095 0.213355 0.214614 0.215874 0.217133 0.218404 0.219674
0.220944 0.222214 0.223495 0.224775 0.226056 0.227337 0.228628 0.229919
0.23121 0.2325 0.233801 0.235102 0.236403 0.237704 0.239015 0.240326
0.241637 0.242948 0.244268 0.245589 0.24691 0.24823 0.24956 0.25089
0.25222 0.25355 0.25489 0.256229 0.257568 0.258907 0.260256 0.261604
0.262953 0.264301 0.265658 0.267015 0.268373 0.26973 0.271096 0.272462
0.273828 0.275194 0.276568 0.277942 0.279317 0.280691 0.282074 0.283457
0.284839 0.286222 0.287613 0.289003 0.290394 0.291785 0.293183 0.294582
0.29598 0.297379 0.298785 0.300191 0.301597 0.303003 0.304417 0.305831
0.307244 0.308658 0.310079 0.311499 0.31292 0.314341 0.315769 0.317196
0.318624 0.320052 0.321487 0.322921 0.324356 0.32579 0.327231 0.328672
0.330113 0.331555 0.333002 0.334449 0.335897 0.337344 0.338798 0.340252
0.341705 0.343159 0.344618 0.346078 0.347537 0.348997 0.350462 0.351927
0.353392 0.354857 0.356328 0.357798 0.359269 0.36074 0.362216 0.363691
0.365167 0.366643 0.368124 0.369605 0.371086 0.372567 0.374052 0.375538
0.377024 0.37851 0.38 0.38149 0.38298 0.384471 0.385965 0.38746 0.388954
0.390449 0.391948 0.393447 0.394945 0.396444 0.397947 0.399449 0.400952
0.402455 0.403961 0.405467 0.406973 0.40848 0.40999 0.411499 0.413009
0.414519 0.416032 0.417545 0.419058 0.420571 0.422087 0.423603 0.425119
0.426635 0.428153 0.429672 0.431191 0.432709 0.434231 0.435752 0.437273
0.438794 0.440318 0.441842 0.443365 0.444889 0.446414 0.44794 0.449466
0.450991 0.452519 0.454046 0.455574 0.457101 0.45863 0.460159 0.461688
0.463218 0.464748 0.466279 0.467809 0.46934 0.470871 0.472403 0.473934
0.475466 0.476999 0.478531 0.480064 0.481596 0.48313 0.484663 0.486196
0.487729 0.489263 0.490797 0.49233 0.493864 0.495398 0.496932 0.498466
0.5 0.501534 0.503068 0.504602 0.506136 0.507669 0.509203 0.510737
0.512271 0.513804 0.515337 0.51687 0.518404 0.519936 0.521469 0.523001
0.524534 0.526066 0.527597 0.529129 0.53066 0.532191 0.533721 0.535252
0.536782 0.538311 0.539841 0.54137 0.542899 0.544426 0.545954 0.547481
0.549009 0.550534 0.55206 0.553586 0.555111 0.556635 0.558158 0.559682
0.561205 0.562727 0.564248 0.565769 0.56729 0.568809 0.570328 0.571847
0.573365 0.574881 0.576397 0.577913 0.579429 0.580942 0.582455 0.583968
0.585481 0.586991 0.588501 0.59001 0.59152 0.593026 0.594533 0.596039
0.597545 0.599048 0.600551 0.602053 0.603556 0.605055 0.606553 0.608052
0.609551 0.611045 0.61254 0.614035 0.615529 0.61702 0.61851 0.62 0.62149
0.622976 0.624462 0.625947 0.627433 0.628914 0.630395 0.631876 0.633357
0.634833 0.636308 0.637784 0.63926 0.640731 0.642201 0.643672 0.645143
0.646608 0.648073 0.649538 0.651003 0.652463 0.653922 0.655382 0.656841
0.658295 0.659748 0.661202 0.662656 0.664103 0.66555 0.666998 0.668445
0.669886 0.671328 0.672769 0.67421 0.675644 0.677079 0.678513 0.679948
0.681376 0.682804 0.684231 0.685659 0.68708 0.688501 0.689921 0.691342
0.692756 0.694169 0.695583 0.696997 0.698403 0.699809 0.701215 0.702621
0.70402 0.705418 0.706817 0.708215 0.709606 0.710997 0.712387 0.713778
0.715161 0.716543 0.717926 0.719309 0.720683 0.722057 0.723432 0.724806
0.726172 0.727538 0.728904 0.73027 0.731627 0.732984 0.734342 0.735699
0.737047 0.738396 0.739744 0.741093 0.742432 0.743771 0.74511 0.74645
0.74778 0.74911 0.75044 0.75177 0.75309 0.754411 0.755731 0.757052
0.758363 0.759674 0.760985 0.762295 0.763596 0.764897 0.766198 0.767499
0.76879 0.770081 0.771372 0.772663 0.773944 0.775224 0.776505 0.777786
0.779056 0.780326 0.781596 0.782867 0.784126 0.785386 0.786645 0.787905
0.789153 0.790402 0.791651 0.7929 0.794137 0.795375 0.796613 0.79785
0.799077 0.800303 0.80153 0.802756 0.803971 0.805186 0.806401 0.807616
0.80882 0.810023 0.811227 0.812431 0.813622 0.814814 0.816006 0.817197
0.818377 0.819557 0.820737 0.821916 0.823084 0.824252 0.825419 0.826587
0.827743 0.828898 0.830053 0.831209 0.832352 0.833494 0.834637 0.83578
0.83691 0.838041 0.839171 0.840301 0.841419 0.842536 0.843654 0.844771
0.845876 0.84698 0.848084 0.849189 0.85028 0.851372 0.852463 0.853554
0.854632 0.85571 0.856788 0.857866 0.858931 0.859995 0.86106 0.862124
0.863175 0.864226 0.865277 0.866328 0.867365 0.868402 0.869439 0.870476
0.871499 0.872523 0.873546 0.874569 0.875578 0.876587 0.877596 0.878605
0.8796 0.880595 0.88159 0.882584 0.883565 0.884545 0.885526 0.886506
0.887472 0.888438 0.889404 0.890369 0.891321 0.892272 0.893223 0.894174
0.89511 0.896047 0.896983 0.897919 0.898841 0.899762 0.900683 0.901605
0.902511 0.903417 0.904323 0.905229 0.90612 0.907011 0.907902 0.908793
0.909669 0.910544 0.91142 0.912295 0.913155 0.914015 0.914876 0.915736
0.91658 0.917424 0.918269 0.919113 0.919942 0.92077 0.921599 0.922428
0.92324 0.924053 0.924866 0.925678 0.926475 0.927272 0.928068 0.928865
0.929646 0.930426 0.931207 0.931987 0.932751 0.933516 0.93428 0.935044
0.935792 0.93654 0.937288 0.938036 0.938767 0.939499 0.94023 0.940961
0.941676 0.942391 0.943106 0.94382 0.944519 0.945217 0.945915 0.946613
0.947294 0.947975 0.948657 0.949338 0.950002 0.950667 0.951331 0.951995
0.952643 0.95329 0.953937 0.954585 0.955215 0.955845 0.956475 0.957106
0.957718 0.958332 0.958945 0.959558 0.960153 0.960749 0.961345 0.96194
0.962519 0.963097 0.963675 0.964254 0.964814 0.965375 0.965936 0.966497
0.96704 0.967584 0.968127 0.96867 0.969196 0.969721 0.970247 0.970773
0.971281 0.971788 0.972296 0.972804 0.973294 0.973784 0.974275 0.974765
0.975237 0.975709 0.976181 0.976654 0.977108 0.977562 0.978016 0.978471
0.978907 0.979343 0.979779 0.980216 0.980634 0.981052 0.98147 0.981889
0.982289 0.982689 0.983089 0.983489 0.983871 0.984252 0.984634 0.985016
0.98538 0.985743 0.986107 0.98647 0.986816 0.987161 0.987506 0.987852
0.988178 0.988505 0.988832 0.989159 0.989468 0.989776 0.990085 0.990393
0.990683 0.990973 0.991263 0.991553 0.991825 0.992096 0.992368 0.992639
0.992892 0.993145 0.993398 0.993651 0.993885 0.99412 0.994354 0.994589
0.994804 0.99502 0.995236 0.995452 0.995649 0.995846 0.996043 0.99624
0.996418 0.996597 0.996775 0.996954 0.997113 0.997273 0.997433 0.997593
0.997734 0.997874 0.998016 0.998156 0.998279 0.998401 0.998523;
#A 1000 0.998645 0.998749 0.998852 0.998956 0.999059 0.999144 0.999229
0.999313 0.999398 0.999464 0.99953 0.999595 0.999661 0.999708 0.999755
0.999802 0.999849 0.999878 0.999906 0.999934 0.999962 0.999972 0.999981
0.999991 1 0.999991 0.999981 0.999972 0.999962 0.999934 0.999906 0.999878
0.999849 0.999802 0.999755 0.999708 0.999661 0.999595 0.999529 0.999463
0.999398 0.999313 0.999228 0.999144 0.999059 0.998955 0.998852 0.998749
0.998645 0.998523 0.998401 0.998278 0.998156 0.998015 0.997874 0.997733
0.997592 0.997432 0.997273 0.997113 0.996953 0.996775 0.996596 0.996418
0.996239 0.996042 0.995845 0.995648 0.995451 0.995235 0.995019 0.994804
0.994588 0.994354 0.994119 0.993885 0.99365 0.993397 0.993144 0.992891
0.992638 0.992367 0.992095 0.991824 0.991552 0.991262 0.990972 0.990682
0.990392 0.990084 0.989775 0.989467 0.989158 0.988831 0.988504 0.988177
0.987851 0.987505 0.98716 0.986815 0.986469 0.986106 0.985742 0.985379
0.985015 0.984633 0.984251 0.983869 0.983488 0.983088 0.982687 0.982287
0.981887 0.981469 0.981051 0.980633 0.980215 0.979778 0.979342 0.978906
0.978469 0.978015 0.977561 0.977107 0.976652 0.97618 0.975708 0.975236
0.974763 0.974273 0.973783 0.973293 0.972803 0.972295 0.971787 0.971279
0.970771 0.970245 0.96972 0.969194 0.968669 0.968125 0.967582 0.967039
0.966495 0.965935 0.965374 0.964813 0.964252 0.963674 0.963095 0.962517
0.961939 0.961343 0.960747 0.960152 0.959556 0.958943 0.95833 0.957717
0.957104 0.956473 0.955843 0.955213 0.954583 0.953936 0.953288 0.952641
0.951993 0.951329 0.950665 0.95 0.949336 0.948655 0.947973 0.947292
0.946611 0.945913 0.945215 0.944517 0.943818 0.943104 0.942389 0.941674
0.940959 0.940228 0.939496 0.938765 0.938034 0.937286 0.936538 0.93579
0.935042 0.934278 0.933514 0.932749 0.931985 0.931204 0.930424 0.929643
0.928863 0.928066 0.927269 0.926473 0.925676 0.924863 0.924051 0.923238
0.922425 0.921597 0.920768 0.919939 0.919111 0.918266 0.917422 0.916578
0.915733 0.914873 0.914013 0.913153 0.912293 0.911417 0.910542 0.909666
0.908791 0.9079 0.907009 0.906118 0.905227 0.904321 0.903414 0.902508
0.901602 0.900681 0.899759 0.898838 0.897917 0.89698 0.896044 0.895108
0.894171 0.89322 0.892269 0.891318 0.890367 0.889401 0.888435 0.887469
0.886503 0.885523 0.884542 0.883562 0.882582 0.881587 0.880592 0.879597
0.878602 0.877593 0.876584 0.875575 0.874566 0.873543 0.87252 0.871497
0.870473 0.869436 0.868399 0.867362 0.866325 0.865274 0.864223 0.863172
0.862121 0.861057 0.859992 0.858928 0.857863 0.856785 0.855707 0.854629
0.853551 0.85246 0.851368 0.850277 0.849186 0.848081 0.846977 0.845872
0.844768 0.84365 0.842533 0.841416 0.840298 0.839168 0.838037 0.836907
0.835777 0.834634 0.833491 0.832348 0.831205 0.83005 0.828895 0.827739
0.826584 0.825416 0.824249 0.823081 0.821913 0.820733 0.819554 0.818374
0.817194 0.816002 0.814811 0.813619 0.812427 0.811224 0.81002 0.808817
0.807613 0.806398 0.805183 0.803968 0.802753 0.801526 0.8003 0.799073
0.797847 0.796609 0.795372 0.794134 0.792896 0.791647 0.790399 0.78915
0.787901 0.786642 0.785382 0.784123 0.782863 0.781593 0.780323 0.779052
0.777782 0.776502 0.775221 0.77394 0.77266 0.771369 0.770078 0.768787
0.767496 0.766195 0.764894 0.763593 0.762292 0.760981 0.75967 0.758359
0.757048 0.755728 0.754407 0.753087 0.751766 0.750436 0.749106 0.747776
0.746446 0.745107 0.743767 0.742428 0.741089 0.73974 0.738392 0.737044
0.735695 0.734338 0.732981 0.731623 0.730266 0.7289 0.727534 0.726168
0.724802 0.723428 0.722054 0.720679 0.719305 0.717922 0.71654 0.715157
0.713774 0.712384 0.710993 0.709602 0.708211 0.706813 0.705414 0.704016
0.702617 0.701211 0.699805 0.698399 0.696993 0.695579 0.694165 0.692752
0.691338 0.689917 0.688497 0.687076 0.685655 0.684227 0.6828 0.681372
0.679944 0.678509 0.677075 0.67564 0.674206 0.672765 0.671324 0.669882
0.668441 0.666994 0.665546 0.664099 0.662652 0.661198 0.659744 0.658291
0.656837 0.655378 0.653918 0.652459 0.650999 0.649534 0.648069 0.646604
0.645139 0.643668 0.642197 0.640727 0.639256 0.63778 0.636304 0.634828
0.633353 0.631872 0.630391 0.62891 0.627429 0.625943 0.624458 0.622972
0.621486 0.619996 0.618506 0.617015 0.615525 0.614031 0.612536 0.611041
0.609547 0.608048 0.606549 0.605051 0.603552 0.602049 0.600546 0.599044
0.597541 0.596035 0.594529 0.593022 0.591516 0.590006 0.588496 0.586987
0.585477 0.583964 0.582451 0.580938 0.579425 0.577909 0.576393 0.574877
0.573361 0.571842 0.570324 0.568805 0.567286 0.565765 0.564244 0.562723
0.561201 0.559678 0.558154 0.556631 0.555107 0.553581 0.552056 0.55053
0.549004 0.547477 0.545949 0.544422 0.542894 0.541365 0.539836 0.538307
0.536778 0.535248 0.533717 0.532187 0.530656 0.529124 0.527593 0.526061
0.52453 0.522997 0.521464 0.519932 0.518399 0.516866 0.515333 0.5138
0.512266 0.510733 0.509199 0.507665 0.506131 0.504598 0.503064 0.50153
0.499996 0.498462 0.496928 0.495394 0.49386 0.492326 0.490792 0.489259
0.487725 0.486192 0.484659 0.483125 0.481592 0.480059 0.478527 0.476994
0.475462 0.47393 0.472399 0.470867 0.469335 0.467805 0.466274 0.464744
0.463213 0.461684 0.460155 0.458626 0.457097 0.455569 0.454042 0.452514
0.450987 0.449461 0.447936 0.44641 0.444884 0.443361 0.441837 0.440314
0.43879 0.437269 0.435748 0.434226 0.432705 0.431186 0.429668 0.428149
0.42663 0.425114 0.423598 0.422082 0.420566 0.419053 0.417541 0.416028
0.414515 0.413005 0.411495 0.409985 0.408476 0.406969 0.405463 0.403957
0.40245 0.400948 0.399445 0.397942 0.39644 0.394941 0.393442 0.391944
0.390445 0.38895 0.387456 0.385961 0.384466 0.382976 0.381486 0.379996
0.378505 0.37702 0.375534 0.374048 0.372563 0.371082 0.369601 0.36812
0.366639 0.365163 0.363687 0.362212 0.360736 0.359265 0.357794 0.356324
0.354853 0.353388 0.351923 0.350458 0.348993 0.347533 0.346074 0.344614
0.343155 0.341701 0.340247 0.338794 0.33734 0.335893 0.334445 0.332998
0.331551 0.330109 0.328668 0.327227 0.325786 0.324352 0.322917 0.321483
0.320048 0.31862 0.317192 0.315765 0.314337 0.312916 0.311495 0.310075
0.308654 0.30724 0.305827 0.304413 0.302999 0.301593 0.300187 0.298781
0.297375 0.295976 0.294578 0.293179 0.291781 0.29039 0.288999 0.287609
0.286218 0.284835 0.283453 0.28207 0.280687 0.279313 0.277939 0.276564
0.27519 0.273824 0.272458 0.271092 0.269726 0.268369 0.267012 0.265654
0.264297 0.262949 0.2616 0.260252 0.258904 0.257564 0.256225 0.254886
0.253547 0.252217 0.250886 0.249556 0.248226 0.246906 0.245585 0.244265
0.242944 0.241633 0.240323 0.239012 0.237701 0.2364 0.235099 0.233798
0.232497 0.231206 0.229915 0.228624 0.227333 0.226053 0.224772 0.223491
0.222211 0.22094 0.21967 0.2184 0.21713 0.21587 0.214611 0.213351 0.212092
0.210843 0.209594 0.208346 0.207097 0.205859 0.204622 0.203384 0.202146
0.20092 0.199693 0.198467 0.19724 0.196025 0.19481 0.193595 0.19238
0.191177 0.189973 0.18877 0.187566 0.186374 0.185183 0.183991 0.182799
0.181619 0.18044 0.17926 0.17808 0.176913 0.175745 0.174577 0.17341
0.172254 0.171099 0.169943 0.168788 0.167645 0.166502 0.165359 0.164217
0.163086 0.161956 0.160826 0.159696 0.158578 0.157461 0.156343 0.155226
0.154121 0.153017 0.151912 0.150808 0.149717 0.148625 0.147534 0.146443
0.145365 0.144287 0.143209 0.142131 0.141066 0.140002 0.138937 0.137873
0.136822 0.135771 0.13472 0.133669 0.132632 0.131595 0.130558 0.129521
0.128498 0.127474 0.126451 0.125428 0.124419 0.12341 0.122401 0.121392
0.120397 0.119402 0.118408 0.117413 0.116432 0.115452 0.114472 0.113491
0.112525 0.11156 0.110594 0.109628 0.108677 0.107726 0.106775 0.105823
0.104887 0.103951 0.103014 0.102078 0.101157 0.100236 0.0993142 0.0983929
0.0974867 0.0965805 0.0956743 0.0947681 0.0938772 0.0929862 0.0920953
0.0912043 0.0903288 0.0894533 0.0885777 0.0877022 0.0868421 0.0859821
0.0851221 0.084262 0.0834177 0.0825733 0.0817289 0.0808845 0.080056
0.0792274 0.0783988 0.0775702 0.0767575 0.0759448 0.0751321 0.0743194
0.0735227 0.0727261 0.0719294 0.0711327 0.0703522 0.0695717 0.0687912
0.0680107 0.0672464 0.0664822 0.0657179 0.0649537 0.0642058 0.0634579
0.06271 0.0619622 0.0612308 0.0604994 0.059768 0.0590366 0.0583219
0.0576071 0.0568923 0.0561775 0.0554794 0.0547814 0.0540833 0.0533852
0.052704 0.0520227 0.0513414 0.0506602 0.0499958 0.0493315 0.0486672
0.0480028 0.0473555 0.0467082 0.0460609 0.0454136 0.0447834 0.0441532
0.0435229 0.0428927 0.0422797 0.0416667 0.0410537 0.0404407 0.039845
0.0392494 0.0386536 0.038058 0.0374796 0.0369014 0.0363231 0.0357448
0.0351839 0.0346231 0.0340623 0.0335014 0.0329582 0.0324149 0.0318717
0.0313284 0.0308028 0.0302772 0.0297516 0.0292259 0.0287181 0.0282102
0.0277023 0.0271944 0.0267043 0.0262142 0.0257241 0.025234 0.0247618
0.0242896 0.0238174 0.0233451 0.0228909 0.0224366 0.0219823 0.0215281
0.0210918 0.0206555 0.0202193 0.019783 0.0193648 0.0189467 0.0185285
0.0181103 0.0177103 0.0173103 0.0169102 0.0165102 0.0161284 0.0157465
0.0153647 0.0149829 0.0146193 0.0142557 0.0138922 0.0135286 0.0131833
0.0128381 0.0124928 0.0121476 0.0118207 0.0114938 0.0111669 0.01084
0.0105315 0.0102231 0.00991461 0.00960612 0.00931612 0.00902611 0.0087361
0.0084461 0.0081746 0.0079031 0.0076316 0.0073601 0.00710714 0.00685418
0.00660124 0.00634828 0.00611392 0.00587955 0.00564519;
#A 2000 0.00541082 0.00519508 0.00497931 0.00476357 0.00454783 0.00435072
0.00415364 0.00395656 0.00375944 0.00358105 0.00340262 0.00322419 0.0030458
0.00288612 0.00272641 0.0025667 0.00240701 0.00226605 0.00212508 0.00198409
0.00184312 0.00172091 0.00159872 0.0014765 0.00135428 0.00125083 0.00114739
0.00104398 0.000940531 0.000855893 0.000771224 0.000686586 0.000601947
0.000536084 0.000470251 0.000404418 0.000338554 0.000291526 0.000244498
0.00019744 0.000150412 0.00012219 9.39965e-05 6.57737e-05 3.75509e-05
2.81632e-05 1.87755e-05 9.38773e-06;
#X coords 0 1 2047 0 300 100 1;
#X restore 76 78 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-phase-accum 1024 float 0;
#X coords 0 1 1023 -1 250 150 1;
#X restore 97 238 graph;
#X restore 300 647 pd fft-tables;
#X obj 412 647 block~ 2048 4;
#X text 20 28 Sample read points & new window/hop;
#X text 171 87 <- check it;
#X text 218 163 <- FFT of Back/Front Windows;
#X obj 825 417 image accum.gif;
#X obj 3 215 cnv 15 570 120 empty empty empty 20 12 0 14 -191407 -66577
0;
#X text 184 256 - Gets last Phase output and sums it to the Phase Difference
of two consecutive Windows from the input.;
#X obj 167 297 tabsend~ \$0-phase-accum;
#X obj 167 228 tabreceive~ \$0-phase-accum;
#N canvas 123 52 275 236 Front-FFT 0;
#X obj 66 126 rfft~;
#X obj 66 90 *~;
#X obj 84 63 tabreceive~ \$0-hann;
#X obj 66 33 inlet~;
#X obj 44 174 outlet~;
#X obj 104 174 outlet~;
#X connect 0 0 4 0;
#X connect 0 1 5 0;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X restore 83 165 pd Front-FFT;
#N canvas 107 326 308 238 Back-FFT 0;
#X obj 66 136 rfft~;
#X obj 66 90 *~;
#X obj 84 63 tabreceive~ \$0-hann;
#X obj 66 33 inlet~;
#X obj 42 184 outlet~;
#X obj 102 184 outlet~;
#X connect 0 0 4 0;
#X connect 0 1 5 0;
#X connect 1 0 0 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X restore -18 164 pd Back-FFT;
#X text 118 702 Output has Amplitude of Front Window and phase of Phase
Accumulation.;
#X obj 35 567 rifft~;
#X obj 35 627 *~;
#X obj 53 602 tabreceive~ \$0-hann;
#X text -51 565 inverse FFT;
#X obj 35 658 /~ 3072;
#X text 91 657 normalize;
#X text 133 483 But The phase output is fed back to the phase-accumulation
subpatch \, for the next analysis round.;
#N canvas 529 236 1366 881 Phase-Accumulation-Illustration 1;
#X obj 232 183 cnv 15 198 68 empty empty empty 20 12 0 14 -203904 -66577
0;
#X obj 283 113 cnv 15 198 68 empty empty empty 20 12 0 14 -262130 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array frame2 100 float 1;
#A 0 1 0.998019 0.992101 0.98227 0.968565 0.951039 0.929763 0.904818
0.876305 0.844324 0.809008 0.770501 0.728956 0.684535 0.637415 0.587779
0.535825 0.481754 0.425776 0.36812 0.309012 0.248686 0.187379 0.125332
0.0627903 1.10827e-07 -0.0627901 -0.125332 -0.187378 -0.248686 -0.309012
-0.36812 -0.425776 -0.481753 -0.535825 -0.587779 -0.637415 -0.684536
-0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819 -0.929764
-0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019 -0.9921
-0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301 -0.84432
-0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773 -0.535818
-0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737 -0.125323
-0.0627817 8.48994e-06 0.0627986 0.12534 0.187387 0.248694 0.30902
0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728962
0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568
0.982273 0.992103 0.99802;
#X coords 0 1 99 -1 200 70 1;
#X restore 282 112 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array frame1 100 float 1;
#A 0 8.59499e-06 0.0627987 0.12534 0.187387 0.248694 0.30902 0.368128
0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728963 0.770508
0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568 0.982273
0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039 0.929763
0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684535 0.637415
0.587779 0.535825 0.481754 0.425776 0.36812 0.309012 0.248686 0.187379
0.125332 0.0627903 1.45286e-07 -0.06279 -0.125332 -0.187378 -0.248686
-0.309012 -0.36812 -0.425776 -0.481753 -0.535825 -0.587779 -0.637415
-0.684536 -0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819
-0.929763 -0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019
-0.992101 -0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301
-0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773
-0.535818 -0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737
-0.125323 -0.0627817;
#X coords 0 1 99 -1 200 70 1;
#X restore 231 182 graph;
#X obj 283 4 cnv 15 198 68 empty empty empty 20 12 0 14 -262130 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array frame3 100 float 1;
#A 0 1 0.998019 0.992101 0.98227 0.968565 0.951039 0.929763 0.904818
0.876305 0.844324 0.809008 0.770501 0.728956 0.684535 0.637415 0.587779
0.535825 0.481754 0.425776 0.36812 0.309012 0.248686 0.187379 0.125332
0.0627903 1.10827e-07 -0.0627901 -0.125332 -0.187378 -0.248686 -0.309012
-0.36812 -0.425776 -0.481753 -0.535825 -0.587779 -0.637415 -0.684536
-0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819 -0.929764
-0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019 -0.9921
-0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301 -0.84432
-0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773 -0.535818
-0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737 -0.125323
-0.0627817 8.48994e-06 0.0627986 0.12534 0.187387 0.248694 0.30902
0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728962
0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568
0.982273 0.992103 0.99802;
#X coords 0 1 99 -1 200 70 1;
#X restore 282 4 graph;
#X obj 333 -65 cnv 15 198 68 empty empty empty 20 12 0 14 -204786 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array frame4 100 float 1;
#A 0 7.54979e-08 -0.0627901 -0.125332 -0.187378 -0.248686 -0.309012
-0.36812 -0.425776 -0.481753 -0.535825 -0.58778 -0.637415 -0.684536
-0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819 -0.929764
-0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019 -0.9921
-0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301 -0.84432
-0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773 -0.535818
-0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737 -0.125323
-0.0627817 8.52533e-06 0.0627987 0.12534 0.187387 0.248694 0.30902
0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728963
0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568
0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039
0.929763 0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684536
0.637415 0.58778 0.535825 0.481754 0.425776 0.36812 0.309012 0.248686
0.187379 0.125332 0.0627904;
#X coords 0 1 99 -1 200 70 1;
#X restore 332 -66 graph;
#X obj 34 595 cnv 15 398 68 empty empty empty 20 12 0 14 -203904 -66577
0;
#X obj 134 525 cnv 15 398 68 empty empty empty 20 12 0 14 -262130 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array new-frame1 200 float 1;
#A 0 8.59499e-06 0.0627987 0.12534 0.187387 0.248694 0.30902 0.368128
0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728963 0.770508
0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568 0.982273
0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039 0.929763
0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684535 0.637415
0.587779 0.535825 0.481754 0.425776 0.36812 0.309012 0.248686 0.187379
0.125332 0.0627903 1.45286e-07 -0.06279 -0.125332 -0.187378 -0.248686
-0.309012 -0.36812 -0.425776 -0.481753 -0.535825 -0.587779 -0.637415
-0.684536 -0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819
-0.929763 -0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019
-0.992101 -0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301
-0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773
-0.535818 -0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737
-0.125323 -0.0627817 8.45455e-06 0.0627986 0.12534 0.187387 0.248694
0.30902 0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542
0.728962 0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043
0.968568 0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565
0.951039 0.929763 0.904818 0.876305 0.844324 0.809008 0.770501 0.728956
0.684536 0.637415 0.58778 0.535825 0.481754 0.425776 0.36812 0.309013
0.248686 0.187379 0.125332 0.0627905 2.85916e-07 -0.0627899 -0.125332
-0.187378 -0.248686 -0.309012 -0.36812 -0.425776 -0.481753 -0.535825
-0.587779 -0.637415 -0.684536 -0.728956 -0.770502 -0.809009 -0.844325
-0.876305 -0.904819 -0.929763 -0.95104 -0.968566 -0.982271 -0.992102
-0.998019 -1 -0.998019 -0.992101 -0.982269 -0.968564 -0.951038 -0.92976
-0.904816 -0.876301 -0.84432 -0.809004 -0.770497 -0.728951 -0.68453
-0.637409 -0.587773 -0.535818 -0.481746 -0.425769 -0.368112 -0.309004
-0.248678 -0.18737 -0.125324 -0.0627819;
#X coords 0 1 199 -1 400 70 1;
#X restore 33 594 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array new-frame2 200 float 1;
#A 0 7.54979e-08 -0.0627901 -0.125332 -0.187378 -0.248686 -0.309012
-0.36812 -0.425776 -0.481753 -0.535825 -0.58778 -0.637415 -0.684536
-0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819 -0.929764
-0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019 -0.9921
-0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301 -0.84432
-0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773 -0.535818
-0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737 -0.125323
-0.0627817 8.52533e-06 0.0627987 0.12534 0.187387 0.248694 0.30902
0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728963
0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568
0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039
0.929763 0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684536
0.637415 0.58778 0.535825 0.481754 0.425776 0.36812 0.309012 0.248686
0.187379 0.125332 0.0627904 2.16067e-07 -0.06279 -0.125332 -0.187378
-0.248686 -0.309012 -0.36812 -0.425776 -0.481753 -0.535825 -0.587779
-0.637415 -0.684536 -0.728957 -0.770502 -0.809009 -0.844325 -0.876305
-0.904819 -0.929763 -0.95104 -0.968566 -0.982271 -0.992102 -0.998019
-1 -0.998019 -0.992101 -0.982269 -0.968564 -0.951038 -0.92976 -0.904816
-0.876301 -0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637409
-0.587773 -0.535818 -0.481746 -0.425769 -0.368112 -0.309004 -0.248678
-0.18737 -0.125324 -0.0627818 8.3847e-06 0.0627985 0.12534 0.187387
0.248694 0.30902 0.368128 0.425784 0.481761 0.535832 0.587786 0.637421
0.684542 0.728962 0.770508 0.809014 0.844329 0.87631 0.904823 0.929767
0.951043 0.968568 0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227
0.968565 0.951039 0.929763 0.904818 0.876305 0.844324 0.809008 0.770501
0.728956 0.684536 0.637415 0.58778 0.535825 0.481754 0.425776 0.36812
0.309013 0.248686 0.187379 0.125332 0.0627905;
#X coords 0 1 199 -1 400 70 1;
#X restore 133 524 graph;
#X obj 84 404 cnv 15 398 68 empty empty empty 20 12 0 14 -261669 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array new-frame3 200 float 1;
#A 0 1 0.998019 0.992101 0.98227 0.968565 0.951039 0.929763 0.904818
0.876305 0.844324 0.809008 0.770501 0.728956 0.684535 0.637415 0.587779
0.535825 0.481754 0.425776 0.36812 0.309012 0.248686 0.187379 0.125332
0.0627903 1.10827e-07 -0.0627901 -0.125332 -0.187378 -0.248686 -0.309012
-0.36812 -0.425776 -0.481753 -0.535825 -0.587779 -0.637415 -0.684536
-0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819 -0.929764
-0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019 -0.9921
-0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301 -0.84432
-0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773 -0.535818
-0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737 -0.125323
-0.0627817 8.48994e-06 0.0627986 0.12534 0.187387 0.248694 0.30902
0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728962
0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568
0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039
0.929763 0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684536
0.637415 0.58778 0.535825 0.481754 0.425776 0.36812 0.309013 0.248686
0.187379 0.125332 0.0627904 2.50526e-07 -0.0627899 -0.125332 -0.187378
-0.248686 -0.309012 -0.36812 -0.425776 -0.481753 -0.535825 -0.587779
-0.637415 -0.684536 -0.728957 -0.770502 -0.809009 -0.844325 -0.876305
-0.904819 -0.929763 -0.95104 -0.968566 -0.982271 -0.992102 -0.998019
-1 -0.998019 -0.992101 -0.982269 -0.968564 -0.951038 -0.92976 -0.904816
-0.876301 -0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637409
-0.587773 -0.535818 -0.481746 -0.425769 -0.368112 -0.309004 -0.248678
-0.18737 -0.125324 -0.0627818 8.34931e-06 0.0627985 0.12534 0.187387
0.248694 0.30902 0.368128 0.425784 0.481761 0.535832 0.587786 0.637421
0.684542 0.728962 0.770508 0.809014 0.844329 0.87631 0.904823 0.929767
0.951043 0.968568 0.982273 0.992103 0.99802;
#X coords 0 1 199 -1 400 70 1;
#X restore 83 403 graph;
#X obj 185 334 cnv 15 398 68 empty empty empty 20 12 0 14 -122480 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array new-frame4 200 float 1;
#A 0 -1 -0.998019 -0.9921 -0.982269 -0.968564 -0.951038 -0.92976 -0.904815
-0.876301 -0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637408
-0.587773 -0.535818 -0.481746 -0.425768 -0.368112 -0.309004 -0.248678
-0.18737 -0.125323 -0.0627816 8.55979e-06 0.0627987 0.12534 0.187387
0.248694 0.30902 0.368128 0.425784 0.481761 0.535832 0.587786 0.637422
0.684542 0.728963 0.770508 0.809014 0.844329 0.87631 0.904823 0.929767
0.951043 0.968568 0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227
0.968565 0.951039 0.929763 0.904818 0.876305 0.844324 0.809008 0.770501
0.728956 0.684535 0.637415 0.58778 0.535825 0.481754 0.425776 0.36812
0.309012 0.248686 0.187379 0.125332 0.0627904 1.80677e-07 -0.06279
-0.125332 -0.187378 -0.248686 -0.309012 -0.36812 -0.425776 -0.481753
-0.535825 -0.587779 -0.637415 -0.684536 -0.728957 -0.770502 -0.809009
-0.844325 -0.876306 -0.904819 -0.929763 -0.95104 -0.968566 -0.982271
-0.992102 -0.998019 -1 -0.998019 -0.992101 -0.982269 -0.968564 -0.951038
-0.92976 -0.904816 -0.876301 -0.84432 -0.809004 -0.770497 -0.728951
-0.68453 -0.637409 -0.587773 -0.535818 -0.481746 -0.425769 -0.368112
-0.309004 -0.248678 -0.18737 -0.125323 -0.0627818 8.42009e-06 0.0627986
0.12534 0.187387 0.248694 0.30902 0.368128 0.425784 0.481761 0.535832
0.587786 0.637422 0.684542 0.728962 0.770508 0.809014 0.844329 0.87631
0.904823 0.929767 0.951043 0.968568 0.982273 0.992103 0.99802 1 0.998019
0.992101 0.98227 0.968565 0.951039 0.929763 0.904818 0.876305 0.844324
0.809008 0.770501 0.728956 0.684536 0.637415 0.58778 0.535825 0.481754
0.425776 0.36812 0.309013 0.248686 0.187379 0.125332 0.0627905 3.21306e-07
-0.0627898 -0.125332 -0.187378 -0.248686 -0.309012 -0.36812 -0.425776
-0.481753 -0.535825 -0.587779 -0.637415 -0.684536 -0.728956 -0.770502
-0.809009 -0.844325 -0.876305 -0.904819 -0.929763 -0.95104 -0.968566
-0.982271 -0.992102 -0.998019;
#X coords 0 1 199 -1 400 70 1;
#X restore 184 333 graph;
#X text 486 134 <- current;
#X text 441 209 <- last;
#X text 542 -46 <- current;
#X text 492 29 <- last;
#X text 543 548 <- current;
#X text 448 625 <- last;
#X text 225 126 | Step |;
#X text 28 503 | Step |;
#X text 12 269 ============================================================
;
#X text 592 359 <- current;
#X text 497 436 <- last;
#X obj 826 590 cnv 15 398 68 empty empty empty 20 12 0 14 -118069 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array accumulated-phase_frame4 200 float 1;
#A 0 8.59499e-06 0.0627987 0.12534 0.187387 0.248694 0.30902 0.368128
0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728963 0.770508
0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568 0.982273
0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039 0.929763
0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684535 0.637415
0.587779 0.535825 0.481754 0.425776 0.36812 0.309012 0.248686 0.187379
0.125332 0.0627903 1.45286e-07 -0.06279 -0.125332 -0.187378 -0.248686
-0.309012 -0.36812 -0.425776 -0.481753 -0.535825 -0.587779 -0.637415
-0.684536 -0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819
-0.929763 -0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019
-0.992101 -0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301
-0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773
-0.535818 -0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737
-0.125323 -0.0627817 8.45455e-06 0.0627986 0.12534 0.187387 0.248694
0.30902 0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542
0.728962 0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043
0.968568 0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565
0.951039 0.929763 0.904818 0.876305 0.844324 0.809008 0.770501 0.728956
0.684536 0.637415 0.58778 0.535825 0.481754 0.425776 0.36812 0.309013
0.248686 0.187379 0.125332 0.0627905 2.85916e-07 -0.0627899 -0.125332
-0.187378 -0.248686 -0.309012 -0.36812 -0.425776 -0.481753 -0.535825
-0.587779 -0.637415 -0.684536 -0.728956 -0.770502 -0.809009 -0.844325
-0.876305 -0.904819 -0.929763 -0.95104 -0.968566 -0.982271 -0.992102
-0.998019 -1 -0.998019 -0.992101 -0.982269 -0.968564 -0.951038 -0.92976
-0.904816 -0.876301 -0.84432 -0.809004 -0.770497 -0.728951 -0.68453
-0.637409 -0.587773 -0.535818 -0.481746 -0.425769 -0.368112 -0.309004
-0.248678 -0.18737 -0.125324 -0.0627819;
#X coords 0 1 199 -1 400 70 1;
#X restore 825 589 graph;
#X text 612 -3 There's no need for Phase Vocoding when the reading
point steps in samples matches the "New Hop Size".;
#X text 614 113 But whenever we alter tempo or pitch separetly \, they
won't be the same! This is the whole point of the phase accumulation
process \, to correct this mismatch of phases.;
#X text 431 269 ============================================================
;
#X text 850 269 ============================================================
;
#X text 612 44 This is because the window (or "frame") we read as the
current frame is the same as next round's previous frame! Therefore
\, phases match! The tables to the left illustrate that \, at a phase
difference of 90 degrees.;
#X obj 725 660 cnv 15 398 68 empty empty empty 20 12 0 14 -262130 -66577
0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array new-frame2 200 float 1;
#A 0 7.54979e-08 -0.0627901 -0.125332 -0.187378 -0.248686 -0.309012
-0.36812 -0.425776 -0.481753 -0.535825 -0.58778 -0.637415 -0.684536
-0.728957 -0.770502 -0.809009 -0.844325 -0.876306 -0.904819 -0.929764
-0.95104 -0.968566 -0.982271 -0.992102 -0.998019 -1 -0.998019 -0.9921
-0.982269 -0.968564 -0.951038 -0.92976 -0.904815 -0.876301 -0.84432
-0.809004 -0.770497 -0.728951 -0.68453 -0.637408 -0.587773 -0.535818
-0.481746 -0.425768 -0.368112 -0.309004 -0.248678 -0.18737 -0.125323
-0.0627817 8.52533e-06 0.0627987 0.12534 0.187387 0.248694 0.30902
0.368128 0.425784 0.481761 0.535832 0.587786 0.637422 0.684542 0.728963
0.770508 0.809014 0.844329 0.87631 0.904823 0.929767 0.951043 0.968568
0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227 0.968565 0.951039
0.929763 0.904818 0.876305 0.844324 0.809008 0.770501 0.728956 0.684536
0.637415 0.58778 0.535825 0.481754 0.425776 0.36812 0.309012 0.248686
0.187379 0.125332 0.0627904 2.16067e-07 -0.06279 -0.125332 -0.187378
-0.248686 -0.309012 -0.36812 -0.425776 -0.481753 -0.535825 -0.587779
-0.637415 -0.684536 -0.728957 -0.770502 -0.809009 -0.844325 -0.876305
-0.904819 -0.929763 -0.95104 -0.968566 -0.982271 -0.992102 -0.998019
-1 -0.998019 -0.992101 -0.982269 -0.968564 -0.951038 -0.92976 -0.904816
-0.876301 -0.84432 -0.809004 -0.770497 -0.728951 -0.68453 -0.637409
-0.587773 -0.535818 -0.481746 -0.425769 -0.368112 -0.309004 -0.248678
-0.18737 -0.125324 -0.0627818 8.3847e-06 0.0627985 0.12534 0.187387
0.248694 0.30902 0.368128 0.425784 0.481761 0.535832 0.587786 0.637421
0.684542 0.728962 0.770508 0.809014 0.844329 0.87631 0.904823 0.929767
0.951043 0.968568 0.982273 0.992103 0.99802 1 0.998019 0.992101 0.98227
0.968565 0.951039 0.929763 0.904818 0.876305 0.844324 0.809008 0.770501
0.728956 0.684536 0.637415 0.58778 0.535825 0.481754 0.425776 0.36812
0.309013 0.248686 0.187379 0.125332 0.0627905;
#X coords 0 1 199 -1 400 70 1;
#X restore 724 659 graph;
#X text 614 178 Below whe have another example \, where a new Window
Size is twice as big as the example on the left (twice the frequency
as well) \, but the reading step is the same.;
#X text 713 297 Phase difference between current and last frames is
now 180 degrees. But the phase difference to the next step is 90 degrees
\, as before \, and we want it to be 180!;
#X text 714 353 So we do the phase accumulation process. Say we are
on the second round and the input is "new-frame4". We get the phase
difference between "new-frame4" and "new-frame3" \, which is 180 degrees
\, and sum it to the accumulated difference from before (which is also
180 degress).;
#X text 716 434 Now the output phase for "new-frame4 is 360 (or zero)
degrees \, or the same as new-frame1 (if we consider the sine phase
to be zero).;
#X text 717 488 In ptractical terms \, we shifted the phase difference
so that newframe4 is now at a phase difference that matches the Hop
Size. Compare the phase difference now between new-frame2 \, and the
new fram4 with accumulated phase:;
#X restore 263 569 pd Phase-Accumulation-Illustration;
#X text 131 369 To the right we have the diagram of the Phase Accumulation
process from Miller's book.;
#X text 130 411 It's a simple process: We get the phase difference
between "Front/Current" window & "Back/Last" window. This phase difference
is summed to the last phase output to compute the phase output for
this analysis.;
#X text 133 530 The phase accumulation is the central key to keep track
of the phase information. The examples in this next subpatch illustrates
this:;
#N canvas 1245 426 502 450 phase-accumulation 0;
#X obj 171 186 cnv 15 210 90 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 22 46 inlet~;
#X obj 143 46 inlet~;
#X obj 82 46 inlet~;
#X obj 202 46 inlet~;
#X obj 146 359 outlet~;
#X obj 206 359 outlet~;
#X obj 143 133 cartopol~;
#X obj 22 134 cartopol~;
#X obj 204 198 -~;
#X obj 204 242 +~;
#X obj 145 300 poltocar~;
#X obj 287 359 outlet~;
#X obj 318 46 inlet~;
#X text 166 22 front;
#X text 52 17 back;
#X text 302 22 Accumulated phase;
#X text 245 202 phase difference;
#X text 288 222 +;
#X text 287 387 phase accumulation;
#X text 236 244 "Accumulated phase";
#X text 178 392 to iFFT;
#X connect 1 0 8 0;
#X connect 2 0 7 0;
#X connect 3 0 8 1;
#X connect 4 0 7 1;
#X connect 7 0 11 0;
#X connect 7 1 9 0;
#X connect 8 1 9 1;
#X connect 9 0 10 0;
#X connect 10 0 12 0;
#X connect 10 0 11 1;
#X connect 11 0 5 0;
#X connect 11 1 6 0;
#X connect 13 0 10 1;
#X restore 23 259 pd phase-accumulation;
#X connect 7 0 8 0;
#X connect 8 0 20 0;
#X connect 8 1 19 0;
#X connect 18 0 33 4;
#X connect 19 0 33 2;
#X connect 19 1 33 3;
#X connect 20 0 33 0;
#X connect 20 1 33 1;
#X connect 22 0 23 0;
#X connect 23 0 26 0;
#X connect 24 0 23 1;
#X connect 26 0 2 0;
#X connect 33 0 22 0;
#X connect 33 1 22 1;
#X connect 33 2 17 0;
#X restore 95 495 pd Phase-Vocoder;
#X text 34 51 For the sake of simplicity \, this patch has a fixed
FFT window size of 2048 with 4 overlaps \, which gives us a Hop size
of 512 samples. Next example allows you to insert different window
sizes \, and include more details.;
#X text 77 343 sample;
#X text 34 118 This patch shows you how to do a Phase Vocoder using
the FFT data in the Polar Form. Like in the previous examples of this
tutorial \, the Polar Form looks simlper than the less intuitive Cartesian
Form involving complex math. Nevertheless \, on the Next Example you'll
see how to do this in the Cartesian form.;
#X obj 537 36 cnv 15 500 500 empty empty empty 20 12 0 14 -204786 -66577
0;
#X text 569 351 Transposition defines how big is the block of samples
to read \, or "New Window Size". This also gives us a "New Hop Size"
\, which is this block divided by 4 \, since we are working with a
FFT analysis with 4 overlaps.;
#X text 569 419 This "New Hop size" is what separates the two consecutive
windows we're analyzing in the [Phase-Vocoder] subpatch.;
#X text 566 69 The Phase Vocoder allows you to perform independent
control over tempo and pitch (here controlled by "speed" & "transposition").
We do that by analysing two consecutive windows and by checking their
phase difference \, which is then accumulated to maintain a coherent
phase information. This will be explained in the [PhaseVocoder] subpatch.
;
#X text 565 176 Because we're always looking at consecutive windows
\, or playing faster/slower \, the Phase Vocoder needs a buffer. We
load a sample into this buffer \, but later there's an example for
you to start recording and apply the phase vocoder on the fly. (*)
;
#X text 568 271 On the first subpatch you'll see how "speed" controls
a "Sample Counter" that spits the sample location. The counter increases
or decreases (if "speed" is negative) at different steps \, and this
affects our tempo change.;
#X text 568 466 Open both subpacthes for more information;
#X text 59 328 open another;
#X text 125 274 Hit play to start playing:;
#X obj 144 537 hsl 100 12 0 1 0 0 empty nonjhjhfjghgdhj empty -2 -6
0 10 -228856 -258113 -1 0 1;
#N canvas 0 22 237 305 gain 0;
#X obj 79 176 *~;
#X obj 67 208 dac~;
#X obj 108 146 line~;
#X msg 108 120 \$1 10;
#X obj 108 94 pow 4;
#X obj 108 67 inlet;
#X obj 79 36 inlet~;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X restore 95 562 pd gain;
#X text 774 552 (*) not yet \, sorry;
#X connect 0 0 7 2;
#X connect 1 0 7 0;
#X connect 2 0 7 3;
#X connect 3 0 7 4;
#X connect 4 0 7 1;
#X connect 7 0 11 0;
#X connect 11 0 25 0;
#X connect 24 0 25 1;
