#N canvas 161 22 1061 917 12;
#X obj 247 123 readsf~;
#N canvas 870 35 590 657 Hann-Window 0;
#X obj 195 429 osc~;
#X obj 195 345 samplerate~;
#X obj 195 521 +~ 0.5;
#X obj 187 560 tabwrite~ \$0-hann;
#X obj 195 498 *~ 0.5;
#X msg 262 398 0.5;
#X obj 195 400 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262130 -1 -1 0 256;
#X text 166 397 Hz;
#X obj 179 107 cnv 15 198 118 empty empty empty 20 12 0 14 -262130
-66577 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 1;
#A 0 0 1.88351e-05 3.76701e-05 9.41753e-05 0.000150651 0.000244766
0.000338882 0.000470638 0.000602365 0.000771701 0.000941068 0.00114799
0.00135493 0.0015994 0.00184387 0.00212586 0.00240785 0.0027273 0.00304675
0.00340363 0.00376052 0.00415474 0.004549 0.00498056 0.0054121 0.00588089
0.00634965 0.00685561 0.00736159 0.00790465 0.00844771 0.00902778 0.00960782
0.0102248 0.0108418 0.0114956 0.0121495 0.01284 0.0135306 0.0142578
0.014985 0.0157487 0.0165124 0.0173125 0.0181127 0.0189491 0.0197855
0.020658 0.0215306 0.0224392 0.0233478 0.0242922 0.0252367 0.026217
0.0271972 0.028213 0.0292289 0.0302802 0.0313314 0.032418 0.0335046
0.0346263 0.035748 0.0369046 0.0380613 0.0392527 0.0404442 0.0416702
0.0428963 0.0441567 0.0454172 0.0467119 0.0480066 0.0493353 0.050664
0.0520266 0.0533891 0.0547853 0.0561815 0.0576111 0.0590407 0.0605035
0.0619664 0.0634621 0.0649579 0.0664865 0.0680151 0.0695761 0.0711372
0.0727306 0.074324 0.0759494 0.0775748 0.079232 0.0808893 0.0825781
0.0842669 0.085987 0.0877071 0.0894582 0.0912094 0.0929913 0.0947732
0.0965856 0.0983981 0.100241 0.102083 0.103956 0.105829 0.107731 0.109633
0.111565 0.113497 0.115458 0.117418 0.119408 0.121398 0.123416 0.125434
0.12748 0.129527 0.131601 0.133675 0.135777 0.137879 0.140008 0.142137
0.144293 0.146449 0.148632 0.150814 0.153023 0.155232 0.157467 0.159702
0.161962 0.164223 0.166509 0.168795 0.171105 0.173416 0.175751 0.178087
0.180446 0.182806 0.185189 0.187573 0.18998 0.192387 0.194817 0.197247
0.1997 0.202153 0.204628 0.207104 0.209601 0.212099 0.214618 0.217137
0.219677 0.222218 0.224779 0.22734 0.229922 0.232504 0.235106 0.237708
0.24033 0.242952 0.245593 0.248234 0.250894 0.253554 0.256233 0.258911
0.261608 0.264305 0.267019 0.269734 0.272466 0.275198 0.277946 0.280695
0.28346 0.286226 0.289007 0.291789 0.294586 0.297383 0.300195 0.303007
0.305835 0.308662 0.311503 0.314345 0.3172 0.320056 0.322925 0.325794
0.328676 0.331559 0.334454 0.337348 0.340256 0.343163 0.346082 0.349001
0.351931 0.354861 0.357803 0.360744 0.363696 0.366647 0.369609 0.372571
0.375542 0.378514 0.381494 0.384475 0.387464 0.390453 0.393451 0.396448
0.399454 0.402459 0.405471 0.408484 0.411504 0.414523 0.417549 0.420575
0.423607 0.426639 0.429676 0.432714 0.435756 0.438799 0.441846 0.444893
0.447944 0.450996 0.454051 0.457106 0.460164 0.463222 0.466283 0.469344
0.472407 0.47547 0.478536 0.481601 0.484667 0.487734 0.490801 0.493868
0.496936 0.500004 0.503072 0.50614 0.509207 0.512275 0.515341 0.518408
0.521473 0.524538 0.527601 0.530665 0.533726 0.536787 0.539845 0.542903
0.545958 0.549013 0.552064 0.555116 0.558163 0.56121 0.564252 0.567295
0.570332 0.57337 0.576402 0.579434 0.582459 0.585485 0.588505 0.591524
0.594537 0.59755 0.600555 0.60356 0.606558 0.609555 0.612544 0.615534
0.618514 0.621495 0.624466 0.627437 0.630399 0.633361 0.636313 0.639264
0.642206 0.645147 0.648077 0.651007 0.653926 0.656845 0.659752 0.66266
0.665555 0.668449 0.671332 0.674214 0.677083 0.679952 0.682808 0.685663
0.688505 0.691346 0.694173 0.697001 0.699813 0.702625 0.705422 0.708219
0.711001 0.713782 0.716547 0.719313 0.722061 0.72481 0.727542 0.730274
0.732988 0.735703 0.7384 0.741096 0.743775 0.746453 0.749114 0.751774
0.754415 0.757056 0.759677 0.762299 0.764901 0.767503 0.770085 0.772667
0.775228 0.777789 0.78033 0.78287 0.785389 0.787908 0.790406 0.792903
0.795378 0.797854 0.800307 0.80276 0.80519 0.80762 0.810027 0.812434
0.814817 0.817201 0.81956 0.82192 0.824255 0.82659 0.828901 0.831212
0.833498 0.835783 0.838044 0.840304 0.842539 0.844774 0.846983 0.849192
0.851375 0.853557 0.855713 0.857869 0.859998 0.862127 0.864229 0.866331
0.868405 0.870479 0.872526 0.874572 0.87659 0.878608 0.880598 0.882587
0.884548 0.886509 0.88844 0.890372 0.892274 0.894177 0.896049 0.897922
0.899764 0.901607 0.903419 0.905232 0.907014 0.908796 0.910547 0.912298
0.914018 0.915738 0.917427 0.919115 0.920773 0.92243 0.924055 0.925681
0.927274 0.928867 0.930428 0.931989 0.933518 0.935046 0.936542 0.938038
0.939501 0.940963 0.942393 0.943823 0.945219 0.946615 0.947977 0.94934
0.950668 0.951997 0.953292 0.954586 0.955847 0.957107 0.958333 0.959559
0.960751 0.961942 0.963099 0.964255 0.965377 0.966499 0.967585 0.968672
0.969723 0.970774 0.97179 0.972806 0.973786 0.974766 0.97571 0.976655
0.977563 0.978472 0.979344 0.980217 0.981053 0.98189 0.98269 0.98349
0.984253 0.985017 0.985744 0.986471 0.987162 0.987852 0.988506 0.98916
0.989777 0.990394 0.990974 0.991554 0.992097 0.99264 0.993146 0.993652
0.99412 0.994589 0.995021 0.995452 0.995846 0.996241 0.996597 0.996954
0.997274 0.997593 0.997875 0.998157 0.998401 0.998646 0.998853 0.999059
0.999229 0.999398 0.99953 0.999661 0.999756 0.99985 0.999906 0.999962
0.999981 1 0.999981 0.999962 0.999906 0.999849 0.999755 0.999661 0.999529
0.999398 0.999228 0.999059 0.998852 0.998645 0.998401 0.998156 0.997874
0.997592 0.997273 0.996953 0.996597 0.99624 0.995846 0.995451 0.99502
0.994588 0.99412 0.993651 0.993145 0.992639 0.992096 0.991553 0.990973
0.990393 0.989776 0.989159 0.988505 0.987851 0.987161 0.98647 0.985743
0.985016 0.984252 0.983488 0.982688 0.981888 0.981052 0.980215 0.979343
0.97847 0.977562 0.976653 0.975709 0.974764 0.973784 0.972804 0.971788
0.970772 0.969721 0.96867 0.967583 0.966496 0.965375 0.964253 0.963096
0.96194 0.960748 0.959557 0.958331 0.957105 0.955845 0.954584 0.953289
0.951995 0.950666 0.949337 0.947975 0.946612 0.945216 0.94382 0.94239
0.940961 0.939498 0.938035 0.936539 0.935044 0.933515 0.931987 0.930426
0.928864 0.927271 0.925678 0.924052 0.922427 0.92077 0.919113 0.917424
0.915735 0.914015 0.912295 0.910544 0.908793 0.907011 0.905229 0.903416
0.901604 0.899761 0.897919 0.896046 0.894174 0.892271 0.890369 0.888437
0.886506 0.884545 0.882584 0.880594 0.878605 0.876587 0.874569 0.872522
0.870476 0.868402 0.866328 0.864226 0.862124 0.859995 0.857866 0.85571
0.853554 0.851371 0.849189 0.84698 0.844771 0.842536 0.840301 0.83804
0.83578 0.833494 0.831208 0.828898 0.826587 0.824252 0.821916 0.819557
0.817197 0.814814 0.81243 0.810023 0.807616 0.805186 0.802756 0.800303
0.79785 0.795375 0.7929 0.790402 0.787905 0.785386 0.782867 0.780326
0.777786 0.775225 0.772663 0.770081 0.7675 0.764898 0.762296 0.759674
0.757052 0.754411 0.75177 0.74911 0.74645 0.743771 0.741093 0.738396
0.735699 0.732985 0.73027 0.727538 0.724806 0.722058 0.719309 0.716543
0.713778 0.710997 0.708215 0.705418 0.702621 0.699809 0.696997 0.694169
0.691342 0.688501 0.685659 0.682804 0.679948 0.677079 0.67421 0.671328
0.668445 0.665551 0.662656 0.659748 0.656841 0.653922 0.651003 0.648073
0.645143 0.642202 0.63926 0.636309 0.633357 0.630395 0.627433 0.624462
0.62149 0.61851 0.615529 0.61254 0.609551 0.606553 0.603556 0.600551
0.597546 0.594533 0.59152 0.588501 0.585481 0.582455 0.579429 0.576397
0.573365 0.570328 0.567291 0.564248 0.561206 0.558158 0.555111 0.55206
0.549009 0.545954 0.542899 0.539841 0.536782 0.533721 0.530661 0.527597
0.524534 0.521469 0.518404 0.515337 0.512271 0.509203 0.506136 0.503068
0.5 0.496932 0.493864 0.490797 0.487729 0.484663 0.481596 0.478531
0.475466 0.472403 0.46934 0.466279 0.463218 0.460159 0.457101 0.454046
0.450991 0.44794 0.444889 0.441842 0.438795 0.435752 0.432709 0.429672
0.426635 0.423603 0.420571 0.417545 0.414519 0.411499 0.40848 0.405467
0.402455 0.399449 0.396444 0.393447 0.390449 0.38746 0.384471 0.38149
0.37851 0.375538 0.372567 0.369605 0.366643 0.363692 0.36074 0.357799
0.354857 0.351927 0.348997 0.346078 0.343159 0.340252 0.337344 0.33445
0.331555 0.328672 0.32579 0.322921 0.320052 0.317196 0.314341 0.311499
0.308658 0.305831 0.303003 0.300191 0.297379 0.294582 0.291785 0.289003
0.286222 0.283457 0.280691 0.277943 0.275194 0.272462 0.26973 0.267016
0.264301 0.261604 0.258907 0.256229 0.25355 0.25089 0.24823 0.245589
0.242948 0.240326 0.237705 0.235103 0.232501 0.229919 0.227337 0.224776
0.222214 0.219674 0.217133 0.214614 0.212095 0.209598 0.2071 0.204625
0.20215 0.199697 0.197244 0.194814 0.192383 0.189977 0.18757 0.185186
0.182803 0.180443 0.178084 0.175748 0.173413 0.171102 0.168791 0.166506
0.16422 0.161959 0.159699 0.157464 0.155229 0.15302 0.150811 0.148628
0.146446 0.14429 0.142134 0.140005 0.137876 0.135774 0.133672 0.131598
0.129524 0.127477 0.125431 0.123413 0.121395 0.119405 0.117416 0.115455
0.113494 0.111562 0.109631 0.107728 0.105826 0.103953 0.102081 0.100238
0.0983955 0.0965831 0.0947706 0.0929887 0.0912068 0.0894557 0.0877046
0.0859845 0.0842645 0.0825757 0.0808869 0.0792297 0.0775725 0.0759471
0.0743217 0.0727283 0.071135 0.0695739 0.0680129 0.0664843 0.0649558
0.06346 0.0619642 0.0605015 0.0590387 0.0576091 0.0561795 0.0547833
0.0533872 0.0520246 0.0506621 0.0493334 0.0480047 0.04671 0.0454154
0.0441549 0.0428945 0.0416685 0.0404424 0.039251 0.0380596 0.036903
0.0357464 0.0346247 0.033503 0.0324165 0.0313299 0.0302787 0.0292274
0.0282116 0.0271958 0.0262156 0.0252354 0.0242909 0.0233465 0.0224379
0.0215293 0.0206568 0.0197842 0.0189479 0.0181115 0.0173114 0.0165113
0.0157476 0.0149839 0.0142568 0.0135296 0.0128391 0.0121485 0.0114947
0.0108409 0.010224 0.00960699 0.00902694 0.0084469 0.00790387 0.00736085
0.00685489 0.00634897 0.00588021;
#A 1000 0.00541145 0.00497991 0.0045484 0.00415421 0.00375998 0.00340313
0.00304627 0.00272685 0.00240743 0.00212547 0.00184351 0.00159907 0.0013546
0.00114769 0.0009408 0.000771463 0.000602156 0.000470459 0.000338733
0.000244617 0.000150532 9.40561e-05 3.76105e-05 1.88053e-05;
#X coords 0 1 1023 0 200 120 1;
#X restore 178 107 graph;
#X text 255 507 make it go from 0 to 1;
#X text 235 430 Waveform: Inverted Cosine;
#X text 296 398 inverted phase;
#X text 203 460 audio from -1 to 1;
#X text 256 282 Window Size;
#X obj 338 370 s \$0-hann;
#X msg 338 346 resize \$1;
#X obj 187 316 t bang bang bang float;
#X obj 187 287 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 195 375 /;
#X connect 0 0 4 0;
#X connect 1 0 19 0;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X connect 5 0 0 1;
#X connect 6 0 0 0;
#X connect 16 0 15 0;
#X connect 17 0 3 0;
#X connect 17 1 1 0;
#X connect 17 2 5 0;
#X connect 17 3 16 0;
#X connect 17 3 19 1;
#X connect 18 0 17 0;
#X connect 19 0 6 0;
#X restore 183 259 pd Hann-Window;
#X text 272 174 (or "filter");
#X obj 247 149 s~ amplitude-source;
#X msg 247 98 open ../samples/\$1.wav \, start;
#X obj 51 213 loadbang;
#X obj 247 71 symbol;
#X obj 247 46 r sample2;
#X obj 22 123 readsf~;
#X msg 22 98 open ../samples/\$1.wav \, start;
#X obj 22 71 symbol;
#X obj 22 46 r sample1;
#X msg 51 238 \; pd dsp 1 \; sample1 kantele \; sample2 numbers;
#X text -9 596 ============================================================
;
#X obj 232 503 r~ amplitude-source;
#X obj 88 535 hsl 100 12 0 1 0 0 empty nonjhjhfjghgdhj empty -2 -6
0 10 -204865 -220534 -1 0 1;
#N canvas 0 22 237 305 gain 0;
#X obj 79 176 *~;
#X obj 67 208 dac~;
#X obj 108 146 line~;
#X msg 108 120 \$1 10;
#X obj 108 94 pow 4;
#X obj 108 67 inlet;
#X obj 79 36 inlet~;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X restore 39 560 pd gain;
#X obj 281 535 hsl 100 12 0 1 0 0 empty nonjhjhfjghgdhj empty -2 -6
0 10 -204865 -220534 -1 0 1;
#N canvas 0 22 237 305 gain 0;
#X obj 79 176 *~;
#X obj 67 208 dac~;
#X obj 108 146 line~;
#X msg 108 120 \$1 10;
#X obj 108 94 pow 4;
#X obj 108 67 inlet;
#X obj 79 36 inlet~;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X restore 232 560 pd gain;
#X text 56 461 Listen to the source sound files:;
#N canvas 90 254 1618 795 Cross-Synthesis(Vocoder) 0;
#X obj 463 667 block~ 1024 4;
#X obj 41 368 cnv 15 800 180 empty empty empty 20 12 0 14 -224626 -66577
0;
#X obj 63 32 inlet~;
#X obj 42 177 cnv 15 520 190 empty empty empty 20 12 0 14 -166565 -66577
0;
#X obj 63 107 *~;
#X obj 63 147 rfft~;
#X obj 64 284 /~;
#X obj 96 284 /~;
#X obj 622 33 inlet~;
#X obj 623 128 *~;
#X obj 363 713 outlet~;
#X obj 363 630 *~;
#X obj 363 571 rifft~;
#X obj 363 668 /~ 1536;
#X obj 360 512 *~;
#X obj 401 514 *~;
#X obj 623 175 rfft~;
#X obj 81 81 tabreceive~ \$0-hann;
#X obj 641 102 tabreceive~ \$0-hann;
#X obj 381 604 tabreceive~ \$0-hann;
#X text 537 503 "Filter";
#X text 196 251 Normalize Control;
#X obj 114 249 clip~ 1 1;
#X obj 788 33 inlet;
#X floatatom 332 107 8 0 0 0 - - -;
#X obj 114 200 expr~ sqrt($v1*$v1 + $v2*$v2);
#X obj 581 407 expr~ sqrt($v1*$v1 + $v2*$v2);
#X text 345 311 make real part = 1 \; in case both parts \; are zero
;
#X obj 52 320 expr~ if($v1 == 0 && $v2 == 0 \, 1 \, $v1) \; $v2;
#X obj 332 193 expr 1 - ($f1 / 100) \; $f1 * $f1;
#X text 395 250 "Spectral Compressor";
#X obj 971 127 rfft~;
#X obj 1119 346 rifft~;
#X obj 1118 295 *~;
#X obj 1159 297 *~;
#X obj 1316 130 rfft~;
#X obj 1253 181 expr~ sqrt($v1*$v1 + $v2*$v2);
#X obj 1093 520 rfft~;
#X obj 1089 646 rifft~;
#X obj 1094 602 *~;
#X obj 1125 604 *~;
#X obj 1206 525 rfft~;
#X obj 1143 564 expr~ sqrt($v1*$v1 + $v2*$v2);
#X obj 1020 178 expr~ sqrt($v1*$v1 + $v2*$v2);
#X obj 971 220 /~;
#X obj 1003 219 /~;
#X text 1032 108 when normalized (totally compressed);
#X text 1128 459 Uncompressed \, original;
#X text 1078 695 Now you may find this familiar \, as it is the same
idea of the spectral filter we've seen before!!!;
#X connect 2 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 25 0;
#X connect 5 1 7 0;
#X connect 5 1 25 1;
#X connect 6 0 28 0;
#X connect 7 0 28 1;
#X connect 8 0 9 0;
#X connect 9 0 16 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X connect 14 0 12 0;
#X connect 15 0 12 1;
#X connect 16 0 26 0;
#X connect 16 1 26 1;
#X connect 17 0 4 1;
#X connect 18 0 9 1;
#X connect 19 0 11 1;
#X connect 22 0 7 1;
#X connect 22 0 6 1;
#X connect 23 0 24 0;
#X connect 24 0 29 0;
#X connect 25 0 22 0;
#X connect 26 0 14 1;
#X connect 26 0 15 1;
#X connect 28 0 14 0;
#X connect 28 1 15 0;
#X connect 29 0 22 1;
#X connect 29 1 22 2;
#X connect 31 0 44 0;
#X connect 31 1 45 0;
#X connect 33 0 32 0;
#X connect 34 0 32 1;
#X connect 35 0 36 0;
#X connect 35 1 36 1;
#X connect 36 0 33 1;
#X connect 36 0 34 1;
#X connect 37 0 39 0;
#X connect 37 1 40 0;
#X connect 39 0 38 0;
#X connect 40 0 38 1;
#X connect 41 0 42 0;
#X connect 41 1 42 1;
#X connect 42 0 39 1;
#X connect 42 0 40 1;
#X connect 43 0 44 1;
#X connect 43 0 45 1;
#X connect 44 0 33 0;
#X connect 45 0 34 0;
#X restore 521 341 pd Cross-Synthesis(Vocoder);
#X obj 614 310 r~ amplitude-source;
#X obj 766 230 vsl 15 100 1 100 1 0 empty empty empty 0 -9 0 10 -204786
-1 -1 0 1;
#X obj 766 347 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-204786 -1 -1 0 256;
#X obj 570 373 hsl 100 12 0 1 0 0 empty nonjhjhfjghgdhj empty -2 -6
0 10 -204865 -220534 -1 0 1;
#N canvas 0 22 237 305 gain 0;
#X obj 79 176 *~;
#X obj 67 208 dac~;
#X obj 108 146 line~;
#X msg 108 120 \$1 10;
#X obj 108 94 pow 4;
#X obj 108 67 inlet;
#X obj 79 36 inlet~;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X restore 521 398 pd gain;
#X floatatom 561 765 5 0 0 0 - - -;
#X obj 457 738 r~ amplitude-source;
#X obj 403 834 hsl 100 12 0 1 0 0 empty nonjhjhfjghgdhj empty -2 -6
0 10 -204865 -220534 -1 0 1;
#N canvas 0 22 237 305 gain 0;
#X obj 79 176 *~;
#X obj 67 208 dac~;
#X obj 108 146 line~;
#X msg 108 120 \$1 10;
#X obj 108 94 pow 4;
#X obj 108 67 inlet;
#X obj 79 36 inlet~;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X restore 354 859 pd gain;
#N canvas 361 22 1086 801 "Timbre_Stamp"(aka-Vocoder) 0;
#X obj 34 181 cnv 15 330 400 empty empty empty 20 12 0 14 -220523 -66577
0;
#X obj 365 381 cnv 15 350 200 empty empty empty 20 12 0 14 -220139
-66577 0;
#X obj 98 454 *~;
#X obj 60 454 *~;
#X obj 60 118 *~;
#X obj 60 33 inlet~;
#X obj 60 141 rfft~;
#X obj 414 181 rfft~;
#X obj 415 155 *~;
#X obj 415 42 inlet~;
#X text 429 432 Amplitude;
#X obj 78 92 tabreceive~ \$0-hann;
#X obj 433 128 tabreceive~ \$0-hann;
#X obj 123 406 clip~;
#X floatatom 155 379 8 0 0 0 - - -;
#X text 219 385 "SQUELCH";
#X floatatom 675 226 5 0 0 0 - - -;
#X obj 396 656 *~;
#X obj 396 589 rifft~;
#X obj 396 742 outlet~;
#X obj 467 691 block~ 1024 4;
#X obj 414 629 tabreceive~ \$0-hann;
#X obj 396 690 /~ 1536;
#X obj 435 542 *~;
#X obj 396 544 *~;
#X obj 675 43 inlet;
#X text 512 541 "Filter";
#X text 103 537 Spectral Compressor;
#X obj 414 407 expr~ sqrt($v1*$v1 + $v2*$v2);
#X obj 123 269 expr~ 1 / sqrt($v1*$v1 + $v2*$v2);
#X obj 60 195 +~ 1e-20;
#X text 101 229 Avoid division by Zero;
#X obj 155 355 expr $f1*$f1 / 100;
#X text 630 292 This patch is basically equivalent to the Pd Example
\, and combines the Spectral Compressor from the Pd's example (with
reciprocal amplitudes) with the amplitude filtering.;
#X connect 2 0 23 0;
#X connect 3 0 24 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 30 0;
#X connect 6 1 2 0;
#X connect 6 1 29 1;
#X connect 7 0 28 0;
#X connect 7 1 28 1;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 11 0 4 1;
#X connect 12 0 8 1;
#X connect 13 0 3 1;
#X connect 13 0 2 1;
#X connect 14 0 13 2;
#X connect 16 0 32 0;
#X connect 17 0 22 0;
#X connect 18 0 17 0;
#X connect 21 0 17 1;
#X connect 22 0 19 0;
#X connect 23 0 18 1;
#X connect 24 0 18 0;
#X connect 25 0 16 0;
#X connect 28 0 24 1;
#X connect 28 0 23 1;
#X connect 29 0 13 0;
#X connect 30 0 29 0;
#X connect 30 0 3 0;
#X connect 32 0 14 0;
#X restore 354 798 pd "Timbre_Stamp"(aka-Vocoder);
#X text 319 665 This vocoder example is also similar to the Pd example
called "timbre stamp" \, presented below. So we can compare it \, open
the subpatch.;
#X text 14 362 The Cross synthesis is also known as Vocoder and we'll
see how they are related. But the classical vocoder is implemented
with filter banks \, whereas this is a FFT implementation which is
analogous to it.;
#X text 510 56 Basically \, what we have here is the previous example
combined with the feature of spectral compression. When totally compressed
\, the amplitude-source is normalized to 1 \, and the result is the
same as the cross-synthesis examples!;
#X text 788 226 "compressed";
#X obj 861 462 r~ amplitude-source;
#N canvas 584 22 1210 775 Cross-Synthesis 0;
#X obj 324 656 block~ 1024 4;
#X obj 96 323 cnv 15 600 180 empty empty empty 20 12 0 14 -261234 -66577
0;
#X obj 146 67 inlet~;
#X obj 95 202 cnv 15 300 120 empty empty empty 20 12 0 14 -179769 -66577
0;
#X obj 146 152 *~;
#X obj 146 212 rfft~;
#X obj 485 68 inlet~;
#X obj 486 143 *~;
#X obj 224 702 outlet~;
#X obj 224 619 *~;
#X obj 224 560 rifft~;
#X obj 224 657 /~ 1536;
#X obj 223 410 *~;
#X obj 264 412 *~;
#X obj 486 220 rfft~;
#X text 255 242 Amplitudes to 1;
#X text 257 271 phase remains;
#X text 267 219 normalizes;
#X obj 164 126 tabreceive~ \$0-hann;
#X obj 504 117 tabreceive~ \$0-hann;
#X obj 242 593 tabreceive~ \$0-hann;
#X text 260 338 "Filter";
#X text 289 460 Result has the Phase information;
#X text 295 475 from sound A & Amplitudes of B;
#X text 312 409 Multiplies Amplitudes of A (= 1);
#X text 315 426 to the Amplitudes of B.;
#X obj 415 346 expr~ sqrt($v1*$v1 + $v2*$v2);
#N canvas 945 105 830 384 Normalize 0;
#X obj 370 290 outlet~;
#X obj 52 299 outlet~;
#X obj 341 51 inlet~;
#X obj 73 49 inlet~;
#X obj 55 209 expr~ $v1 / sqrt(pow ($v1 \, 2) + pow($v2 \, 2)) \; $v2
/ sqrt(pow ($v1 \, 2) + pow($v2 \, 2)) \;;
#X obj 72 131 expr~ if($v1 == 0 && $v2 == 0 \, 1 \, $v1) \; $v2;
#X text 370 134 make real part = 1 \, in case both parts are zero;
#X text 403 210 Divide real and imaginary part by amplitude \; Amplitudes
are normalized to one.;
#X connect 2 0 5 1;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X restore 146 276 pd Normalize;
#X text 127 41 phase-source;
#X text 443 38 amplitude-source;
#X text 625 183 We'll first normalize the amplitude values from the
phase-source. This creates an amplitude spectrum equal to one \, but
the phase information remains.;
#X text 625 243 Check the [normalize] subpatch \, we now do it in [expr~]
and have a conditional check to make it equal to one even if both real
and imaginary parts are equal to zero.;
#X text 728 355 Next \, we multiply the real and imaginary parts to
the Amplitudes values of the amplitude-source input. This will change
the amplitude values once again \, but now they will be the same as
from the amplitude-source input. As the phase information still remains
\, we have our cross synthesis ready to go.;
#X text 165 23 A;
#X text 500 19 B;
#X text 520 560 This implementation resembles the "Spectral Filter"
shown before \, where we multiplied the input of a sound to a Filtering
Table. Now \, instead of a table \, we have the amplitude envelope
of another sound file!;
#X connect 2 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 27 0;
#X connect 5 1 27 1;
#X connect 6 0 7 0;
#X connect 7 0 14 0;
#X connect 9 0 11 0;
#X connect 10 0 9 0;
#X connect 11 0 8 0;
#X connect 12 0 10 0;
#X connect 13 0 10 1;
#X connect 14 0 26 0;
#X connect 14 1 26 1;
#X connect 18 0 4 1;
#X connect 19 0 7 1;
#X connect 20 0 9 1;
#X connect 26 0 12 1;
#X connect 26 0 13 1;
#X connect 27 0 12 0;
#X connect 27 1 13 0;
#X restore 738 494 pd Cross-Synthesis;
#X text 791 318 "original";
#X text 806 244 (cross-synthesis);
#X obj 787 530 hsl 100 12 0 1 0 0 empty nonjhjhfjghgdhj empty -2 -6
0 10 -204865 -220534 -1 0 1;
#N canvas 0 22 237 305 gain 0;
#X obj 79 176 *~;
#X obj 67 208 dac~;
#X obj 108 146 line~;
#X msg 108 120 \$1 10;
#X obj 108 94 pow 4;
#X obj 108 67 inlet;
#X obj 79 36 inlet~;
#X connect 0 0 1 0;
#X connect 0 0 1 1;
#X connect 2 0 0 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X restore 738 555 pd gain;
#X obj 521 309 r~ input;
#X obj 738 464 r~ input;
#X obj 39 501 r~ input;
#X obj 354 738 r~ input;
#X obj 22 148 s~ input;
#X text 719 424 Compare the result to the Cross Synthesis:;
#X text -4 330 ============================================================
;
#X text 490 600 ============================================================
;
#X text 512 147 But when it isn't compressed \, the original input
goes through. You can see inside how this is qual to the spectral filter
example we've seen before.;
#X connect 0 0 3 0;
#X connect 0 1 6 0;
#X connect 4 0 0 0;
#X connect 5 0 12 0;
#X connect 6 0 4 0;
#X connect 7 0 6 0;
#X connect 8 0 45 0;
#X connect 8 1 10 0;
#X connect 9 0 8 0;
#X connect 10 0 9 0;
#X connect 11 0 10 0;
#X connect 14 0 18 0;
#X connect 15 0 16 1;
#X connect 17 0 18 1;
#X connect 20 0 25 0;
#X connect 21 0 20 1;
#X connect 22 0 23 0;
#X connect 22 0 20 2;
#X connect 24 0 25 1;
#X connect 26 0 30 2;
#X connect 27 0 30 1;
#X connect 28 0 29 1;
#X connect 30 0 29 0;
#X connect 35 0 36 1;
#X connect 36 0 40 0;
#X connect 39 0 40 1;
#X connect 41 0 20 0;
#X connect 42 0 36 0;
#X connect 43 0 16 0;
#X connect 44 0 30 0;
